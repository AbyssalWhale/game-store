# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Deploy and Test Game Store

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
        - name: Running NPM CI
          run: npm ci
        - name: Running NPM Build
          run: npm run build
        # - name: Setting AWS credentials
        #   uses: aws-actions/configure-aws-credentials@v1
        #   with:
        #     aws-access-key-id: ${{secrets.AWS_KEY_ID}}
        #     aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        #     aws-region: eu-central-1
        # - name: Sync with S3
        #   run: aws s3 sync dist/ s3://awoha.xyz
  python-playwright:
    uses: /AbyssalWhale/python-pw/.github/workflows/reusable-workflow.yml@main
    needs: build
    with:
        publish-aws: true
    secrets:
        aws-bucket-region: "eu-central-1"
        aws-bucket: "s3://awoha.xyz"
        aws-key: ${{secrets.AWS_KEY_ID}}
        aws-a-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    permissions:
        contents: read
        issues: read
        checks: write
        pull-requests: write
  # dotnettests:
  #   name: .NetTests
  #   runs-on: ubuntu-latest
  #   needs: build
  #   permissions:
  #       contents: read
  #       issues: read
  #       checks: write
  #       pull-requests: write
  #   steps:
  #   - name: Checkout DotNet Tests
  #     uses: actions/checkout@v2
  #     with:
  #       repository: AbyssalWhale/AutomationTests-PW
  #       path: './automationtests'
  #   - name: Setup .NET Core SDK
  #     uses: actions/setup-dotnet@v3.1.0
  #   - name: Setup NuGet.exe for use with actions
  #     uses: NuGet/setup-nuget@v1.2.0
  #   - name: .Net Build
  #     uses: EasyDesk/action-dotnet-build@v1.0.0
  #     with:
  #       path: './automationtests'
  #   - name: Install Playwright
  #     shell: pwsh
  #     run: |
  #       .\automationtests\Core\bin\Release\net7.0\playwright.ps1 install
  #   - name: Print out TestsConfigurator 
  #     shell: pwsh
  #     run: |
  #       ls /home/runner/work/game-store/game-store/automationtests/
  #   - name: Update .runsettings
  #     shell: pwsh
  #     run: |
  #       $filePathToTask = "/home/runner/work/game-store/game-store/automationtests/TestsConfigurator/RunSettings/InstanceSettings.runsettings"
  #       $xml = New-Object XML
  #       $xml.Load($filePathToTask)
  #       $xml.SelectSingleNode("//Parameter[@name='PublishToZephyr']").value="false"
  #       $xml.SelectSingleNode("//Parameter[@name='ZephyrCycleName']").value="default"
  #       $xml.SelectSingleNode("//Parameter[@name='ZephyrCycleComment']").value="default"
  #       $xml.SelectSingleNode("//Parameter[@name='AgentTestsResultsFolder']").value="default"
  #       $xml.SelectSingleNode("//Parameter[@name='Branch']").value="develop"
  #       $xml.SelectSingleNode("//Parameter[@name='ZephyrToken']").value="default"
  #       $xml.SelectSingleNode("//Parameter[@name='ApiKey']").value="${{secrets.RAWG_KEY}}"
  #       $xml.SelectSingleNode("//Parameter[@name='ApiToken']").value="default"
  #       $xml.Save($filePathToTask)
  #       ${$filePathToTask}
  #   - name: Run Tests
  #     shell: pwsh
  #     run: |
  #       dotnet test /home/runner/work/game-store/game-store/automationtests/RegressionTests/bin/Release/net7.0/RegressionTests.dll --logger "trx;logfilename=/home/runner/work/game-store/game-store/automationtests/dotnet-testResults/testResults.trx" --settings "/home/runner/work/game-store/game-store/automationtests/TestsConfigurator/RunSettings/InstanceSettings.runsettings"
  #   - name: Publish Test Results
  #     uses: EnricoMi/publish-unit-test-result-action@v2.7.0
  #     with:
  #         check_name: DotNet Tests Results
  #         files: |
  #          /home/runner/work/game-store/game-store/automationtests/dotnet-testResults/*.trx
